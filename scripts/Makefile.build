PHONY := __build
__build:


obj-y :=
subdir-y :=

include Makefile

# obj-y := a.o b.o c/ d/
# $(filter %/, $(obj-y))   : c/ d/
# __subdir-y  : c d
# subdir-y    : c d
__subdir-y	:= $(patsubst %/,%,$(filter %/, $(obj-y)))
subdir-y	+= $(__subdir-y)

# c/built-in.o d/built-in.o
subdir_objs := $(foreach f,$(subdir-y),$(f)/built-in.o)

# a.o b.o
cur_objs := $(filter-out %/, $(obj-y))
dep_files := $(foreach f,$(cur_objs),.$(f).d)
dep_files := $(wildcard $(dep_files))

lds_obj :=$(filter %.lds, $(cur_objs))

ifneq ($(dep_files),)
  include $(dep_files)
endif


current_dir = $(shell pwd)
reverse_top = $(subst /,\/,$(TOPDIR)/)
relative_dir = $(shell echo $(current_dir) | sed 's/$(reverse_top)//g')

PHONY += $(subdir-y)


__build : $(subdir-y) built-in.o $(lds_obj)

$(subdir-y):
	make -C $@ -f $(TOPDIR)/scripts/Makefile.build

tmp_objs := $(cur_objs) $(subdir_objs)
real_objs := $(filter-out %.lds, $(tmp_objs))

built-in.o :$(real_objs)
ifeq ($(real_objs),)
	$(CC) $(CFLAGS) -c -x c /dev/null -o $@
else
	$(LD) -r -o $@ $^
endif

dep_file = .$@.d

%.o : %.c
	@echo "  CC 	  $(relative_dir)/$@"
	$(CC) $(CFLAGS) -Wp,-MD,$(dep_file) -c -o $@ $<

%.o : %.S
	@echo "  CC 	  $(relative_dir)/$@"
	$(CC) $(AFLAGS) -Wp,-MD,$(dep_file) -c -o $@ $<

%.lds :%.lds.S
	@echo "  CC 	  $(relative_dir)/$@"
	$(CC) $(CFLAGS) -E -P -o $@ $<

.PHONY : $(PHONY)
